# docker/docker-compose.yml
version: '3.8'

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "100m"
    max-file: "5"
    compress: "true"

services:
  ai_server:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_REQUIRE_CUDA=cuda>=11.8
      - PYTHONUNBUFFERED=1
      - AI_DATA_PATH=${AI_DATA_PATH}
      - MODEL_CACHE_PATH=${MODEL_CACHE_PATH}
    volumes:
      - ../:/app:ro
      - ai_data:/data
      - model_cache:/app/model_cache
      - cuda_cache:/cuda-cache
    ports:
      - "${API_PORT:-8000}:8000"
    ulimits:
      memlock: -1
      stack: 67108864
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 16G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
              device_ids: ['0']
    logging: *default-logging
    healthcheck:
      test: ["CMD", "python3", "-c", "import torch; assert torch.cuda.is_available()"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_TLS_ENABLED=true
    volumes:
      - ../config/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis_data:/data
    ports:
      - "127.0.0.1:${REDIS_PORT:-6379}:6379"
    sysctls:
      net.core.somaxconn: 1024
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 6G
    logging: *default-logging
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ../config/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 4G
    logging: *default-logging

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_DEFAULT_THEME=dark
      - GF_AUTH_ANONYMOUS_ENABLED=false
    volumes:
      - ../config/grafana:/etc/grafana:ro
      - grafana_data:/var/lib/grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    logging: *default-logging

volumes:
  ai_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${AI_DATA_PATH}
  model_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${MODEL_CACHE_PATH}
  cuda_cache:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local